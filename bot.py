import requests
import feedparser
import asyncio
import emoji
from bs4 import BeautifulSoup
from deep_translator import GoogleTranslator
from aiogram import Bot, Dispatcher
from aiogram.types import InputMediaPhoto

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7414890925:AAFxyXC2gGMMxu5Z3KVw5BVvYJ75Db2m85c"   # –í—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –∏–∑ BotFather
CHANNEL_ID = "-1002447063110"  # –ò–ª–∏ Chat ID, –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–π
URL = "https://ru.investing.com/news/cryptocurrency-news"
HEADERS = {"User-Agent": "Mozilla/5.0"}

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (—á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å)
sent_news = set()

def translate_text(text):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –∏–≤—Ä–∏—Ç —á–µ—Ä–µ–∑ Google Translate"""
    try:
        return GoogleTranslator(source="auto", target="iw").translate(text)
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}"

def add_emojis(text):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏"""
    emoji_dict = {
        "Bitcoin": "‚Çø", "BTC": "‚Çø", "–±–∏—Ç–∫–æ–∏–Ω": "‚Çø",
        "Ethereum": "Œû", "ETH": "Œû",
        "—Ä–æ—Å—Ç": "üìà", "–ø–∞–¥–µ–Ω–∏–µ": "üìâ",
        "—Ä—ã–Ω–æ–∫": "üìä", "–Ω–æ–≤–æ—Å—Ç—å": "üì∞",
        "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏": "üí∞", "–ø—Ä–æ–≥–Ω–æ–∑": "üîÆ",
        "SEC": "‚öñÔ∏è", "ETF": "üìë",
        "–ø—Ä–æ–±–ª–µ–º–∞": "‚ö†Ô∏è", "–≤–∑–ª–æ–º": "üîì", "–∞—Ç–∞–∫–∞": "üõë"
    }

    for word, emo in emoji_dict.items():
        if word.lower() in text.lower():
            text += f" {emo}"
    return text

def get_news():
    """–ü–∞—Ä—Å–∏—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Å Investing.com, –≤–∫–ª—é—á–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    response = requests.get(URL, headers=HEADERS)
    soup = BeautifulSoup(response.text, "html.parser")

    news_list = []
    articles = soup.find_all("article", class_="js-article-item")[:5]  # –ë–µ—Ä—ë–º 5 —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π

    for article in articles:
        title = article.find("a", class_="title").get_text(strip=True)  # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        summary = article.find("p", class_="text").get_text(strip=True)  # –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        img_tag = article.find("img")  # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–≥ <img>

        if img_tag and "data-src" in img_tag.attrs:
            img_url = img_tag["data-src"]  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
        else:
            img_url = None  # –ï—Å–ª–∏ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏

        # –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –∏–≤—Ä–∏—Ç + –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏
        translated_title = add_emojis(translate_text(title))
        translated_summary = add_emojis(translate_text(summary))

        news_list.append({"title": translated_title, "summary": translated_summary, "img": img_url})

    return news_list

async def fetch_news():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram"""
    news = get_news()
    
    for article in news:
        news_id = article["title"]  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID (–∑–∞–≥–æ–ª–æ–≤–æ–∫)
        if news_id in sent_news:
            continue  # –ï—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        sent_news.add(news_id)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
        text = f"üì∞ *{article['title']}*\nüìä {article['summary']}"

        if article["img"]:  # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ñ–æ—Ç–æ
            await bot.send_photo(chat_id=CHANNEL_ID, photo=article["img"], caption=text, parse_mode="Markdown")
        else:
            await bot.send_message(chat_id=CHANNEL_ID, text=text, parse_mode="Markdown")

async def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª"""
    while True:
        await fetch_news()
        await asyncio.sleep(300)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    asyncio.run(main())
