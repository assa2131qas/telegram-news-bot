import feedparser
import asyncio
import emoji
from deep_translator import GoogleTranslator
from aiogram import Bot, Dispatcher

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = AAFxyXC2gGMMxu5Z3KVw5BVvYJ75Db2m85c  # –í—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –∏–∑ BotFather
RSS_URL = "https://cryptopanic.com/news/rss/?filter=important&currencies=BTC,ETH"
CHANNEL_ID = "-1002447063110"  # –ò–ª–∏ Chat ID, –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–π

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (—á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å)
sent_news = set()

def translate_text(text):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –∏–≤—Ä–∏—Ç —á–µ—Ä–µ–∑ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π Google Translate"""
    try:
        return GoogleTranslator(source="auto", target="iw").translate(text)
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}"

def add_emojis(text):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–º–∞–π–ª–∏–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏"""
    emoji_dict = {
        "Bitcoin": "‚Çø", "BTC": "‚Çø", "–±–∏—Ç–∫–æ–∏–Ω": "‚Çø",
        "Ethereum": "Œû", "ETH": "Œû",
        "—Ä–æ—Å—Ç": "üìà", "–ø–∞–¥–µ–Ω–∏–µ": "üìâ",
        "—Ä—ã–Ω–æ–∫": "üìä", "–Ω–æ–≤–æ—Å—Ç—å": "üì∞",
        "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏": "üí∞", "–ø—Ä–æ–≥–Ω–æ–∑": "üîÆ",
        "SEC": "‚öñÔ∏è", "ETF": "üìë",
        "–ø—Ä–æ–±–ª–µ–º–∞": "‚ö†Ô∏è", "–≤–∑–ª–æ–º": "üîì", "–∞—Ç–∞–∫–∞": "üõë"
    }

    for word, emo in emoji_dict.items():
        if word.lower() in text.lower():
            text += f" {emo}"
    return text

async def fetch_news():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ RSS, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram"""
    feed = feedparser.parse(RSS_URL)
    for entry in feed.entries:
        news_id = entry.link  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –Ω–æ–≤–æ—Å—Ç–∏ (—Å—Å—ã–ª–∫–∞)
        if news_id in sent_news:
            continue  # –ï—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        sent_news.add(news_id)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö
        title = entry.title
        link = entry.link
        summary = entry.summary if hasattr(entry, "summary") else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"

        translated_title = add_emojis(translate_text(title))
        translated_summary = add_emojis(translate_text(summary))

        message = f"üì¢ *{translated_title}*\n\n{translated_summary}\n[–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ]({link})"
        await bot.send_message(chat_id=CHANNEL_ID, text=message, parse_mode="Markdown")

async def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª"""
    while True:
        await fetch_news()
        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

if __name__ == "__main__":
    asyncio.run(main())
